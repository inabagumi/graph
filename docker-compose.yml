version: '3.0'
services:
  node-exporter:
    command:
    - "--path.rootfs=/host"
    image: prom/node-exporter:v0.18.1
    network_mode: host
    pid: host
    restart: always
    volumes:
    - /:/host:ro,rslave
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.16.0
    restart: always
  cadvisor:
    image: google/cadvisor:v0.33.0
    restart: always
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys/:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
  prometheus:
    command:
    - "--config.file=/etc/prometheus/prometheus.yml"
    - "--storage.tsdb.path=/prometheus"
    - "--storage.tsdb.retention.time=365d"
    depends_on:
    - node-exporter
    - blackbox-exporter
    - cadvisor
    image: prom/prometheus:v2.14.0
    restart: always
    volumes:
    - ./config/prometheus:/etc/prometheus:ro
    - ./data/prometheus:/prometheus
  influxdb:
    image: influxdb:1.7.8-alpine
    restart: always
    volumes:
    - ./data/influxdb:/var/lib/influxdb
  worker:
    build: ./worker
    depends_on:
    - influxdb
    env_file: .env
    image: ykzts/graph-worker
    restart: always
    volumes:
    - ./config/worker:/etc/worker
  renderer:
    image: grafana/grafana-image-renderer:1.0.5
    restart: always
  grafana:
    depends_on:
    - prometheus
    - influxdb
    - renderer
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: Inabagumi
      GF_EXTERNAL_IMAGE_STORAGE_GCS_BUCKET: ykzts-graph
      GF_EXTERNAL_IMAGE_STORAGE_GCS_KEY_FILE: /tmp/service-account-key.json
      GF_EXTERNAL_IMAGE_STORAGE_PROVIDER: gcs
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_SERVER_ROOT_URL: https://graph.ykzts.sexy
    image: grafana/grafana:6.4.4
    restart: always
    volumes:
    - ./data/grafana:/var/lib/grafana
    - ./service-account-key.json:/tmp/service-account-key.json
  nginx:
    depends_on:
    - grafana
    image: nginx:1.17.5-alpine
    ports:
    - 80:80
    restart: always
    volumes:
    - ./config/nginx:/etc/nginx:ro
